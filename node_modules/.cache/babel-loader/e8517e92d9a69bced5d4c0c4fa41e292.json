{"ast":null,"code":"var _jsxFileName = \"/Users/chamodgamage/Documents/GitHub/matching-valentine-game/src/components/cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { SimpleGrid, Box, useTheme, Text } from '@chakra-ui/react';\nimport ReactCardFlip from 'react-card-flip';\nimport yam from 'yam.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport const Cards = () => {\n  _s();\n\n  const [flipped, setFlipped] = useState(new Set());\n  const [data, setData] = useState([]);\n  const [hot, setHot] = useState('');\n  const [hotIdx, setHotIdx] = useState(null);\n  const [done, setDone] = useState([]);\n  const [wait, setWait] = useState(false);\n  const [reasons, setReasons] = useState(false);\n  const [count, setCount] = useState(0);\n  const [score, setScore] = useState(localStorage.getItem('score'));\n  const theme = useTheme();\n  useEffect(() => {\n    setFlipped(new Set());\n    setDone([]);\n    let poko = JSON.parse(JSON.stringify(yam.data));\n    const len = poko.length > 10 ? 0 : poko.length;\n\n    for (let i = 0; i < len; i++) {\n      poko.push(poko[i]);\n    }\n\n    shuffleArray(poko);\n    setData(poko);\n  }, []);\n  useEffect(() => {\n    // console.log('useeffect');\n    if (done.length >= 10) {\n      let newScore = Math.floor(20000 / count); // console.log(newScore);\n\n      if ((score === null || newScore > parseInt(score)) && count !== 0) {\n        setScore(newScore.toString());\n        setCount(0);\n        localStorage.setItem('score', newScore.toString());\n      }\n    }\n  }, [done.length]); // useEffect(() => {\n  //   if (!reasons) {\n  //     setCount(0);\n  //   }\n  // }, [reasons]);\n\n  const handleFlipped = (gif, i) => {\n    flipped.add(i);\n    console.log(count); // setCount(count + 1);\n    // console.log(flipped);\n    // console.log(gif, i);\n\n    setCount(count + 1);\n\n    if (hot === '') {\n      setHot(gif);\n      setHotIdx(i);\n    } else if (hot === gif) {\n      setHot('');\n      setHotIdx(null);\n      let newDone = done;\n      newDone.push(gif);\n      setDone(newDone);\n    } else {\n      setHot('');\n      setHotIdx(null);\n      setWait(true);\n      setTimeout(function () {\n        flipped.delete(i);\n        flipped.delete(hotIdx);\n        setWait(false);\n      }, 1000);\n    } // console.log(flipped);\n    // console.log(gif, i);\n\n\n    console.log(done);\n  };\n\n  const Reasons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reasons\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"20 Reasons Why:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media1.tenor.com/images/49ab0e73f6ce9dc8c616f378899a083d/tenor.gif?itemid=12870822\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [yam.data.map((url, i) => /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: 2,\n        spacing: 0,\n        children: [i % 2 === 0 && /*#__PURE__*/_jsxDEV(Couple, {\n          idx: i,\n          reasons: [yam.love[2 * i], yam.love[2 * i + 1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            border: '6px solid pink',\n            borderRadius: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), i % 2 === 1 && /*#__PURE__*/_jsxDEV(Couple, {\n          idx: i,\n          reasons: [yam.love[2 * i], yam.love[2 * i + 1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(0);\n          setReasons(!reasons);\n        },\n        className: \"glow-on-hover\",\n        type: \"button\",\n        children: reasons ? 'Back to puzzle!' : 'Kellooooo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: score !== null && `High Score: ${score}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: done.length >= 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCount(0);\n            setReasons(!reasons);\n          },\n          className: \"glow-on-hover\",\n          type: \"button\",\n          children: reasons ? 'Back to puzzle!' : 'Kellooooo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), reasons ? /*#__PURE__*/_jsxDEV(Reasons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SimpleGrid // minChildWidth={150}\n      , {\n        columns: 5,\n        spacing: 10,\n        px: 20,\n        py: 10,\n        children: (data !== null && data !== void 0 ? data : []).map((gif, i) => {\n          const isFlipped = flipped.has(i);\n          return /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n            isFlipped: isFlipped,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              height: 185,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              boxShadow: \"2xl\",\n              bg: \"main.100\",\n              cursor: \"pointer\",\n              borderRadius: 10,\n              onClick: () => {\n                if (!done.includes(gif) && !wait) {\n                  handleFlipped(gif, i);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 140,\n                margin: 0,\n                children: 'POKO!'[i % 5]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              height: 185,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              boxShadow: \"2xl\",\n              bg: \"main.100\",\n              borderRadius: 10,\n              overflow: \"hidden\",\n              onClick: () => {// handleFlipped(gif, i);\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                padding: 5,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: gif\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cards, \"vMoK1APH+bJ+AgET9uYgHmeTERE=\", false, function () {\n  return [useTheme];\n});\n\n_c = Cards;\n\nconst Couple = ({\n  reasons,\n  idx\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    fontSize: 30,\n    border: '6px solid pink',\n    borderRadius: 10\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [2 * idx + 1, \". \", reasons[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [2 * (idx + 1), \". \", reasons[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 224,\n  columnNumber: 3\n}, this);\n\n_c2 = Couple;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cards\");\n$RefreshReg$(_c2, \"Couple\");","map":{"version":3,"sources":["/Users/chamodgamage/Documents/GitHub/matching-valentine-game/src/components/cards/index.tsx"],"names":["useState","useEffect","SimpleGrid","Box","useTheme","Text","ReactCardFlip","yam","shuffleArray","array","i","length","j","Math","floor","random","Cards","flipped","setFlipped","Set","data","setData","hot","setHot","hotIdx","setHotIdx","done","setDone","wait","setWait","reasons","setReasons","count","setCount","score","setScore","localStorage","getItem","theme","poko","JSON","parse","stringify","len","push","newScore","parseInt","toString","setItem","handleFlipped","gif","add","console","log","newDone","setTimeout","delete","Reasons","display","flexDirection","justifyContent","map","url","love","width","border","borderRadius","isFlipped","has","includes","Couple","idx","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { SimpleGrid, Box, useTheme, Text } from '@chakra-ui/react';\nimport ReactCardFlip from 'react-card-flip';\nimport yam from 'yam.json';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport const Cards: React.FC = () => {\n  const [flipped, setFlipped] = useState(new Set());\n  const [data, setData] = useState([]);\n  const [hot, setHot] = useState('');\n  const [hotIdx, setHotIdx] = useState(null);\n  const [done, setDone] = useState([]);\n  const [wait, setWait] = useState(false);\n  const [reasons, setReasons] = useState(false);\n  const [count, setCount] = useState(0);\n  const [score, setScore] = useState(localStorage.getItem('score'));\n  const theme = useTheme();\n\n  useEffect(() => {\n    setFlipped(new Set());\n    setDone([]);\n    let poko = JSON.parse(JSON.stringify(yam.data));\n    const len = poko.length > 10 ? 0 : poko.length;\n    for (let i = 0; i < len; i++) {\n      poko.push(poko[i]);\n    }\n    shuffleArray(poko);\n    setData(poko);\n  }, []);\n\n  useEffect(() => {\n    // console.log('useeffect');\n    if (done.length >= 10) {\n      let newScore = Math.floor(20000 / count);\n      // console.log(newScore);\n      if ((score === null || newScore > parseInt(score)) && count !== 0) {\n        setScore(newScore.toString());\n        setCount(0);\n        localStorage.setItem('score', newScore.toString());\n      }\n    }\n  }, [done.length]);\n\n  // useEffect(() => {\n  //   if (!reasons) {\n  //     setCount(0);\n  //   }\n  // }, [reasons]);\n\n  const handleFlipped = (gif, i) => {\n    flipped.add(i);\n    console.log(count);\n    // setCount(count + 1);\n    // console.log(flipped);\n    // console.log(gif, i);\n    setCount(count + 1);\n    if (hot === '') {\n      setHot(gif);\n      setHotIdx(i);\n    } else if (hot === gif) {\n      setHot('');\n      setHotIdx(null);\n      let newDone = done;\n      newDone.push(gif);\n      setDone(newDone);\n    } else {\n      setHot('');\n      setHotIdx(null);\n      setWait(true);\n      setTimeout(function () {\n        flipped.delete(i);\n        flipped.delete(hotIdx);\n        setWait(false);\n      }, 1000);\n    }\n    // console.log(flipped);\n    // console.log(gif, i);\n    console.log(done);\n  };\n\n  const Reasons = () => (\n    <div className=\"reasons\">\n      <h1>20 Reasons Why:</h1>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        <img src=\"https://media1.tenor.com/images/49ab0e73f6ce9dc8c616f378899a083d/tenor.gif?itemid=12870822\" />\n      </div>\n      <div>\n        {yam.data.map((url, i) => (\n          <SimpleGrid columns={2} spacing={0}>\n            {i % 2 === 0 && (\n              <Couple\n                idx={i}\n                reasons={[yam.love[2 * i], yam.love[2 * i + 1]]}\n              />\n            )}\n            <div\n              style={{\n                width: '100%',\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                border: '6px solid pink',\n                borderRadius: 10,\n              }}\n            >\n              <img src={url} />\n              {/* {i} */}\n            </div>\n            {i % 2 === 1 && (\n              <Couple\n                idx={i}\n                reasons={[yam.love[2 * i], yam.love[2 * i + 1]]}\n              />\n            )}\n          </SimpleGrid>\n        ))}\n        <button\n          onClick={() => {\n            setCount(0);\n            setReasons(!reasons);\n          }}\n          className=\"glow-on-hover\"\n          type=\"button\"\n        >\n          {reasons ? 'Back to puzzle!' : 'Kellooooo'}\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <Box textAlign=\"center\" justifyContent=\"center\">\n        <div>{score !== null && `High Score: ${score}`}</div>\n        <div>\n          {done.length >= 10 && (\n            <button\n              onClick={() => {\n                setCount(0);\n                setReasons(!reasons);\n              }}\n              className=\"glow-on-hover\"\n              type=\"button\"\n            >\n              {reasons ? 'Back to puzzle!' : 'Kellooooo'}\n            </button>\n          )}\n        </div>\n        {reasons ? (\n          <Reasons />\n        ) : (\n          <SimpleGrid\n            // minChildWidth={150}\n            columns={5}\n            spacing={10}\n            px={20}\n            py={10}\n          >\n            {(data ?? []).map((gif, i) => {\n              const isFlipped = flipped.has(i);\n              return (\n                <ReactCardFlip isFlipped={isFlipped}>\n                  <Box\n                    height={185}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    textAlign=\"center\"\n                    boxShadow=\"2xl\"\n                    bg=\"main.100\"\n                    cursor=\"pointer\"\n                    borderRadius={10}\n                    onClick={() => {\n                      if (!done.includes(gif) && !wait) {\n                        handleFlipped(gif, i);\n                      }\n                    }}\n                  >\n                    <Text fontSize={140} margin={0}>\n                      {'POKO!'[i % 5]}\n                    </Text>\n                  </Box>\n                  <Box\n                    height={185}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    textAlign=\"center\"\n                    boxShadow=\"2xl\"\n                    bg=\"main.100\"\n                    borderRadius={10}\n                    overflow=\"hidden\"\n                    onClick={() => {\n                      // handleFlipped(gif, i);\n                    }}\n                  >\n                    <Box padding={5}>\n                      <img src={gif} />\n                    </Box>\n                  </Box>\n                </ReactCardFlip>\n              );\n            })}\n          </SimpleGrid>\n        )}\n      </Box>\n    </>\n  );\n};\n\nconst Couple = ({ reasons, idx }) => (\n  <div\n    style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-around',\n      fontSize: 30,\n      border: '6px solid pink',\n      borderRadius: 10,\n    }}\n  >\n    <div>\n      <h2>\n        {2 * idx + 1}. {reasons[0]}\n      </h2>\n    </div>\n    <div>\n      <h2>\n        {2 * (idx + 1)}. {reasons[1]}\n      </h2>\n    </div>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}